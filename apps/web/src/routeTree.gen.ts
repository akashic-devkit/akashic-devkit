/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as HookIndexRouteImport } from './routes/hook/index'
import { Route as ComponentIndexRouteImport } from './routes/component/index'
import { Route as HookUseMobileRouteImport } from './routes/hook/useMobile'
import { Route as ComponentSwitchCaseRouteImport } from './routes/component/SwitchCase'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const HookIndexRoute = HookIndexRouteImport.update({
  id: '/hook/',
  path: '/hook/',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentIndexRoute = ComponentIndexRouteImport.update({
  id: '/component/',
  path: '/component/',
  getParentRoute: () => rootRouteImport,
} as any)
const HookUseMobileRoute = HookUseMobileRouteImport.update({
  id: '/hook/useMobile',
  path: '/hook/useMobile',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentSwitchCaseRoute = ComponentSwitchCaseRouteImport.update({
  id: '/component/SwitchCase',
  path: '/component/SwitchCase',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/component/SwitchCase': typeof ComponentSwitchCaseRoute
  '/hook/useMobile': typeof HookUseMobileRoute
  '/component': typeof ComponentIndexRoute
  '/hook': typeof HookIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/component/SwitchCase': typeof ComponentSwitchCaseRoute
  '/hook/useMobile': typeof HookUseMobileRoute
  '/component': typeof ComponentIndexRoute
  '/hook': typeof HookIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/component/SwitchCase': typeof ComponentSwitchCaseRoute
  '/hook/useMobile': typeof HookUseMobileRoute
  '/component/': typeof ComponentIndexRoute
  '/hook/': typeof HookIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/component/SwitchCase'
    | '/hook/useMobile'
    | '/component'
    | '/hook'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/component/SwitchCase' | '/hook/useMobile' | '/component' | '/hook'
  id:
    | '__root__'
    | '/'
    | '/component/SwitchCase'
    | '/hook/useMobile'
    | '/component/'
    | '/hook/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ComponentSwitchCaseRoute: typeof ComponentSwitchCaseRoute
  HookUseMobileRoute: typeof HookUseMobileRoute
  ComponentIndexRoute: typeof ComponentIndexRoute
  HookIndexRoute: typeof HookIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hook/': {
      id: '/hook/'
      path: '/hook'
      fullPath: '/hook'
      preLoaderRoute: typeof HookIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/component/': {
      id: '/component/'
      path: '/component'
      fullPath: '/component'
      preLoaderRoute: typeof ComponentIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hook/useMobile': {
      id: '/hook/useMobile'
      path: '/hook/useMobile'
      fullPath: '/hook/useMobile'
      preLoaderRoute: typeof HookUseMobileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/component/SwitchCase': {
      id: '/component/SwitchCase'
      path: '/component/SwitchCase'
      fullPath: '/component/SwitchCase'
      preLoaderRoute: typeof ComponentSwitchCaseRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ComponentSwitchCaseRoute: ComponentSwitchCaseRoute,
  HookUseMobileRoute: HookUseMobileRoute,
  ComponentIndexRoute: ComponentIndexRoute,
  HookIndexRoute: HookIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
